# 수학, 과학 계산용 패키지
# 성능: 파이썬의 list보다 빠름 -> ndarray
# 메모리 사이즈: 파이썬의 리스트보다 적은 메모리 사용

!pip install numpy
import numpy as np

# 리스트를 ndarray로 생성하는 방법
arr = np.array([1, 2, 3, 4])
list1 = [1, 2, 3, 4]
arr1 = np.array(list1)

# ndarray는 list와 다르게 1개의 단일 데이터 타입만 허용
# 데이터 타입이 다를시 큰 데이터 타입으로 바꿈
arr3 = np.array([1, 2, 3.14, True])
arr4 = np.array([1, 2, 3.14, True, 'apple'])
arr4 = np.array([1, 2, 3.14, True, '1234'], dtype = int)

# dot product(내적)
# 맞닿는 shape가 같아야 함
# 결과 행렬은 떨어져 있는 shape의 형태
a = np.array([[1, 2, 3],
              [1, 2, 3],
              [2, 3, 4]])
b = np.array([[1, 2],
              [3, 4],
              [5, 6]])
np.dot(a, b)

np.sort(arr1) # 기본적으로 오름차순 정렬
np.sort(arr1)[::-1] # 내림차순 
result = np.sort(arr1) # 정렬된 결과를 유지하지 않음

# 행 정렬
np.sort(arr2d, axis = 0)
# 열 정렬
np.sort(arr2d, axis = 1)

